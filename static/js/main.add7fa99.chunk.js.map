{"version":3,"sources":["components/Project/Project.js","components/Search/Search.js","components/Project/Index.js","components/Main/Main.js","container/App.js","reportWebVitals.js","index.js"],"names":["Project","person","map","user","info","name","title","first","last","login","uuid","username","password","salt","md5","sha1","sha256","picture","large","medium","thumbnail","className","src","alt","email","location","city","Search","onInputChange","style","fontSize","textAlign","margin","href","target","rel","type","onChange","placeholder","padding","width","Index","useState","setPerson","searchField","setSearchField","useEffect","fetch","then","response","json","results","filteredInput","filter","e","toLowerCase","includes","length","text","value","Main","marginTop","class","App","lineHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.add7fa99.chunk.js","sourcesContent":["import 'tachyons'\r\n\r\nconst Project = ({person}) => {\r\n    return ( \r\n        person.map((user, info) => {\r\n      const { title, first, last } = person[info].name;\r\n      const { uuid, username, password, salt, md5, sha1, sha256 } = person[info].login;\r\n      const { large, medium, thumbnail } = person[info].picture;\r\n            return(\r\n                <div className='shadow-1 dib pa3 ma3 br3 ' key={`${uuid}`}>\r\n                        <img className='pic' src={`${large}`} alt=\"pic\" />\r\n                <div className='ma4'>\r\n                    <h1>{`${title} ${first} ${last}`}</h1>\r\n                    <div className='tl'>\r\n                        <p>{`Username: ${username}`}</p>\r\n                        <p>{`Email: ${person[info].email}`}</p>\r\n                        <p>{`City: ${person[info].location.city}`}</p>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            )\r\n        })\r\n     );\r\n}\r\n \r\nexport default Project;\r\n","import React from 'react'\r\n\r\nconst Search = ({onInputChange}) => {\r\n    return ( \r\n        <div>\r\n            <h1>Join Me!!</h1>\r\n            <p className='text' style={{fontSize: '1.5rem', textAlign: 'center', margin: '2rem'}}>Let's make something fun together!</p>\r\n            <a href=\"mailto: mariamparvez.m@gmail.com\" target=\"_blank\"><button className='btn' target=\"_blank\" rel=\"noopener noreferrer\">Email me</button></a>\r\n            <input type=\"text\" onChange={onInputChange} placeholder='Search...' style=\r\n            {{\r\n                padding: '1rem',\r\n                width: '20rem',\r\n                margin: '1rem'\r\n            }}/>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Search;","import Project from \"./Project\";\r\nimport Search from \"../Search/Search\";\r\nimport 'tachyons'\r\nimport React,{ useState, useEffect }  from \"react\";\r\n\r\nconst Index= () =>{\r\n    const [ person, setPerson ] = useState([])\r\n    const [ searchField, setSearchField ] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch('https://randomuser.me/api/??inc=email&results=100')\r\n        .then(response => response.json())\r\n        .then(info => setPerson(info.results))\r\n    }, [])\r\n\r\n    const onInputChange = (text) => {\r\n        setSearchField(text.target.value)\r\n    }\r\n        const filteredInput = person.filter(e => {\r\n            return e.email.toLowerCase().includes(searchField.toLowerCase())\r\n        })\r\n\r\n        return  (!person.length ? <h1>Loading...</h1> :\r\n        (<>\r\n            <div style={{textAlign: 'center'}}>\r\n                <Search onInputChange={onInputChange}/>\r\n                <Project className='tc' person={filteredInput}/>\r\n            </div>\r\n                \r\n            </>\r\n        )\r\n         ); \r\n};\r\nexport default Index;\r\n\r\n","import React from 'react';\r\nimport 'tachyons'\r\n\r\nconst Main = () => {\r\n    return ( \r\n        <div className='ma6'>\r\n        <h1 className='title' style={{fontSize: '2.5rem'}}>NICE TO VIRTUALLY MEET YOU.</h1>\r\n            <p className='text' style={{fontSize: '2rem', textAlign: 'center'}}>I am Mariam. This webpage contains my projects.</p> \r\n          <ul className='tc'>\r\n          <a href=\"https://www.behance.net/gallery/103700211/Traffood-Mobile-Application-for-Travellers\" target=\"_blank\"><li className=\"dib shadow-2 pa4 ma2 grow f2\">UI UX Designs</li></a>\r\n              <a href=\"https://github.com/mariamparvez/face-detector-react/\" target=\"_blank\"><li className=\"dib shadow-2 pa4 ma2 grow f2\">The Face Detector</li></a>\r\n              <a href=\"https://mariamparvez.github.io/designs/\" target=\"_blank\"><li className=\"dib shadow-2 pa4 ma2 grow f2\">Graphic Designs</li></a>\r\n              <a href=\"https://mariamparvez.github.io/quote-generater/\" target=\"_blank\"><li className=\"dib shadow-2 pa4 ma2 grow f2\">Random Quote Generator </li></a>\r\n              <a href=\"https://mariamparvez.github.io/robofriends/\" target=\"_blank\"><li className=\"dib shadow-2 pa4 ma2 grow f2\">RoboFriends React App</li></a>\r\n          </ul>\r\n          <div className='tc'>\r\n          <p className='text' style={{fontSize: '2rem', textAlign: 'center', marginTop: '4rem'}}>Scroll Further!!</p>\r\n          <span class=\"scroll-btn\">\r\n            <a href=\"#\">\r\n                <span class=\"mouse\">\r\n                <span>\r\n                </span>\r\n                </span>\r\n            </a>\r\n        </span>\r\n          </div>\r\n      </div>\r\n     );\r\n}\r\n \r\nexport default Main;","import React from 'react';\nimport Index from '../components/Project/Index';\nimport Main from '../components/Main/Main';\n\nfunction App() {\n  return (\n    <>\n  <Main/>\n  <div className=\"tc\">\n      <h1>These are my buddies that helped me make it.</h1>\n      <p className='text' style={{fontSize: '1.5rem',lineHeight:'2.5rem', textAlign: 'center',}}>Pssssst! Just kidding! They aren't technically my real buddies, it's just an api that generates random people. refresh to see it for yourself.</p>\n  </div>\n    <Index/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/index.css';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}